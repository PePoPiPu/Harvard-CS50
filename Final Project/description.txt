Login and Register:

Login and register pages have been already designed on the front-end, requiring a major visual overhaul in the ending versions of the app.
Login and register logic has been implemented with python, jinja, flask and SQL.
Form validation and image flashing has been implemented with Flask and Python.
More extensive client side validation is required with cybersecurity measures to improve overall security.

Index:
Not yet implemented.
The index should show a dashboard of sorts. Ideas include:
Alerts that show automatic changes in the shift organization of the staff. This alerts should come with an approval option and edit option.
Total number of active staff separated by shifts and day , e.g Morning shift: 16 active Second shift: 8 active, etc.
    This should show if the active staff is under the current operation threshold. e.g if the minimum amount of workers needed in the second
    shift is 13, show a strong alert if the active number is before that. Maybe offer options of staff in their rest days in order to get
    them for an extra shift.
Add a dashboard for new staff, options to see where they are at their training and an option to edit their training plan.
(SHOULD ADD A NEW STAFF TAB FOR ALL OF THIS INFORMATION TOO)

About:
Not yet implemented.
Normal html webpage that has summarized information about the project. Shouldn't include instructions as the current aim is to have
a a user-friendly app as possible

Staff Planner:

The idea is an interactive and dynamic calendar implemented maybe with javascript. Should inlude a sorting algorithm that's going to work
with the different staff profiles.

The program should add correlations automatically like:
Staff experience in the company and the difficulty of each counter. Each counter's difficulty is going to be decided on it's number.
e.g counter number 2 has more difficulty than counter number 5. It has more currencies and more clients.

Example:
Let's say StaffMember1, an experienced staff member goes on sick leave and tells that to the company the day prior to his shift.
When removed from the shift calendar, the program should automatically assign StaffMember2 to the counter StaffMember1 had been
originally assigned to. And the place of StaffMember2 should be replaced with StaffMember3. If the operational threshold is still
over nominal amounts there should be no alert. If the "shuffle" of staff members provokes a counter being empty, an alert should be shown
and the program should offer solutions. Either call someone for an extra shift or if there's enough people, change a staff member to
the shift that's under a nominal operational situation.